[{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dataharvester.html","id":"initialise","dir":"Articles","previous_headings":"","what":"Initialise","title":"Introduction to dataharvester","text":"using package, user must ensure necessary dependencies installed dataharvester functions work. step takes approximately 15 minutes complete. done, subsequent initialisations take couple seconds. Binder.org environment specific dataharvester also available users just want download small datasets quickly without wanting set Python R - instructios . use dataharvester local computer, first step install package GitHub. remotes package necessary downloading external source – un-comment run install.packages(\"remotes\") necessary. package installed, initialise initialise_harvester() function. environment name must provided provide location dependencies, default environment R normally \"r-reticulate\". users use Python already configured \"r-reticulate\" projects, choose environment name step. R automatically use reticulate package configure, install setup Python environment miniconda minimal prompts user. Follow prompts () R console, environment set minutes. encounter issues, likely configured Python manually RStudio’s settings .Rprofile. assume able troubleshoot , although common solutions : specify different environment name initialise_harvester(), use command line interface create new conda environment, refer initialise_harvester() function able auto-detect currently-available environments.","code":"# install.packages(\"remotes\") remotes::install_github(\"sydney-informatics-hub/dataharvester\") initialise_harvester(\"r-reticulate\")"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dataharvester.html","id":"preprocesss","dir":"Articles","previous_headings":"","what":"Preprocesss","title":"Introduction to dataharvester","text":"Preprocessing steps occur data can manipulated external servers downloaded. now, exclusive Google Earth Engine (GEE) API since can process images Google Cloud. Access GEE API requires additional authentication steps can done initialise_harvester() using additional argument, earthengine= TRUE: function evaluated, Google Cloud CLI take help authenticate existing Google account. new browser window may pop help generate API token can gain access GEE API. step swift local machine - using binder.org environment RStudio Cloud, may need perform different authentication method described .","code":"initialise_harvester(\"r-reticulate\", earthengine = TRUE)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dataharvester.html","id":"download","dir":"Articles","previous_headings":"","what":"Download","title":"Introduction to dataharvester","text":"cases, data downloaded geospatial images (.e. GeoTIFF) can processed. Download functions standardised naming prefix syntax. cases, downloads requested using download_*() function minimal inputs : product layer name(s) access (defined API), path folder, downloads stored (processing, needed), area interest defined bounding box EPSG:4326 download_* function additional arguments unique API used, three arguments sufficient request download data products respective servers: information downloads, refer download function Reference section: download_dea() download_dem() download_landscape() download_radiometric() download_silo() download_slga() download_gee()","code":"# The code below is an example and will NOT evaluate: download_*(layer = <layername>,            out_path = <path to folder>,            bbox = <xmin, ymin, xmax, ymax>)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dataharvester.html","id":"process-and-sample-data","dir":"Articles","previous_headings":"","what":"Process and sample data","title":"Introduction to dataharvester","text":"data downloaded, functions available process data , include: sampling data based available sampling coordinates, raster_query() temporal aggregation, using aggregate_temporal() course, since downloaded data open GeoTIFF CSV formats, users may also utilise R packges (e.g. terra) manipulate data .","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dataharvester.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What’s next","title":"Introduction to dataharvester","text":"Data-Harvester still actively developed functions soon available statistical modelling machine learning workflows.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dea.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"download_dea()","text":"Digital Earth Australia’s (DEA) Landsat Surface Reflectance products take Landsat 5 Thematic Mapper (TM), Landsat 7 Enhanced Thematic Mapper Plus (ETM+) Landsat 8 Operational Land Imager (OLI) imagery captured Australian continent corrects inconsistencies across land coastal fringes. result accurate standardised surface reflectance data, instrumental identifying quantifying environmental change. DEA’s Landsat Surface Reflectance products form single, cohesive Analysis Ready Data (ARD) package, allows analyse surface reflectance data without need apply additional corrections. Module name: getdata_dea.py Bounding Box: variable (see Layers) Resolution: variable (depending layer, typically 25m) Updates: Daily yearly Source: https://docs.dea.ga.gov.au/notebooks/DEA_datasets/DEA_Landsat_Surface_Reflectance.html License: Creative Commons Attribution 4.0 International (CC 4.0) Attribution: Digital Earth Australia (DEA)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dea.html","id":"layers","dir":"Articles","previous_headings":"","what":"Layers","title":"download_dea()","text":"title: DEA Surface Reflectance (Landsat) description: Geoscience Australia Landsat 5 Thematic Mapper Analysis Ready Data Collection 3 bounding box: (110.696007613984, -45.6734535062289, 156.154528040633, -8.13764292647926) date limits: [‘1986-08-16’, ‘2022-09-05’] Number bands: 7 title: DEA Surface Reflectance (Sentinel-2 Near Real-Time) description: Sentinel-2A MSI ARD NRT - NBAR NBART Pixel Quality bounding box: (109.989859933428, -45.2413329418709, 155.307643731418, -9.9300073889701) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 23 title: DEA Surface Reflectance (Sentinel-2) description: Sentinel-2A MSI Definitive ARD - NBART Pixel Quality bounding box: (109.968510816964, -45.2234942244028, 156.101505058599, -9.02727104242043) date limits: [‘2015-07-12’, ‘2022-09-13’] Number bands: 12 title: DEA GeoMAD (Landsat 8 OLI-TIRS) description: Geoscience Australia Landsat Nadir BRDF Adjusted Reflectance Terrain, Landsat 8 Geomedian Calendar Year Collection 3 bounding box: (110.413246718272, -46.2302085135865, 157.044900204052, -8.10857383542487) date limits: [‘2013-01-01’, ‘2021-01-01’] Number bands: 10 title: DEA GeoMAD (Landsat 7 ETM+) description: Geoscience Australia Landsat Nadir BRDF Adjusted Reflectance Terrain, Landsat 7 Geomedian Calendar Year Collection 3 bounding box: (110.413246718272, -45.1432282004529, 156.432609321534, -8.21783704144064) date limits: [‘1999-01-01’, ‘2021-01-01’] Number bands: 10 title: DEA GeoMAD (Landsat 5 TM) description: Geoscience Australia Landsat Nadir BRDF Adjusted Reflectance Terrain, Landsat 5 Geomedian Calendar Year Collection 3 bounding box: (110.413246718272, -45.0401572488294, 156.432609321534, -7.21314878610402) date limits: [‘1986-01-01’, ‘2011-01-01’] Number bands: 10 title: DEA Surface Reflectance (Landsat 8 OLI-TIRS) description: Geoscience Australia Landsat 8 Operational Land Imager Thermal Infra-Red Scanner Analysis Ready Data Collection 3 bounding box: (110.718297795307, -45.6734535062289, 156.154528040633, -9.07553770894522) date limits: [‘2013-03-19’, ‘2022-09-05’] Number bands: 9 title: DEA Surface Reflectance (Landsat 7 ETM+) description: Geoscience Australia Landsat 7 Enhanced Thematic Mapper Plus Analysis Ready Data Collection 3 bounding box: (110.696007613984, -44.1889410289207, 155.711647298981, -9.15270092381057) date limits: [‘1999-05-28’, ‘2022-04-06’] Number bands: 8 title: DEA Surface Reflectance (Landsat 5 TM) description: Geoscience Australia Landsat 5 Thematic Mapper Analysis Ready Data Collection 3 bounding box: (110.757249124468, -44.2624681575318, 155.662004153478, -8.13764292647926) date limits: [‘1986-08-16’, ‘2011-11-17’] Number bands: 7 title: DEA Surface Reflectance (Landsat 8 OLI-TIRS, Provisional) description: Geoscience Australia Landsat 8 Operational Land Imager Thermal Infra-Red Scanner Analysis Ready Data Collection 3 (provisional) bounding box: (110.746179078976, -44.2480872929322, 156.113923365678, -9.07570747846392) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 9 title: DEA Surface Reflectance (Landsat 7 ETM+, Provisional) description: Geoscience Australia Landsat 7 Enhanced Thematic Mapper Plus Analysis Ready Data Collection 3 (provisional) bounding box: (113.36982861436, -42.7522970095266, 155.249275549932, -9.18167640172494) date limits: [‘2022-06-22’, ‘2022-08-24’] Number bands: 8 title: DEA Surface Reflectance (Landsat, Provisional) description: Geoscience Australia Landsat 7 Enhanced Thematic Mapper Plus Analysis Ready Data Collection 3 (provisional) bounding box: (110.746179078976, -44.2480872929322, 156.113923365678, -9.07570747846392) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 7 title: DEA Surface Reflectance (Sentinel-2B MSI Near Real-Time) description: Sentinel-2B MSI ARD NRT - NBAR NBART Pixel Quality bounding box: (109.989859933428, -45.2413329418709, 155.307643731418, -9.9300073889701) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 23 title: DEA Surface Reflectance (Sentinel-2A MSI Near Real-Time) description: Sentinel-2A MSI ARD NRT - NBAR NBART Pixel Quality bounding box: (109.989859933428, -45.2413329418709, 155.307643731418, -9.9300073889701) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 23 title: DEA Surface Reflectance (Sentinel-2, Provisional) description: Geoscience Australia Sentinel 2a MSI Analysis Ready Data Collection 3 (provisional) bounding box: (111.958960179236, -44.3413038768651, 155.219674237016, -9.93000738897011) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 12 title: DEA Surface Reflectance (Sentinel-2B MSI, Provisional) description: Geoscience Australia Sentinel 2b MSI Analysis Ready Data Collection 3 (provisional) bounding box: (111.959041001616, -44.341297231057, 155.219281688203, -9.93000738897011) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 12 title: DEA Surface Reflectance (Sentinel-2A MSI, Provisional) description: Geoscience Australia Sentinel 2a MSI Analysis Ready Data Collection 3 (provisional) bounding box: (111.958960179236, -44.3413038768651, 155.219674237016, -9.93000738897011) date limits: [‘2022-06-20’, ‘2022-09-19’] Number bands: 12 title: DEA Surface Reflectance (Sentinel-2A MSI) description: Sentinel-2A MSI Definitive ARD - NBART Pixel Quality bounding box: (109.968510816964, -45.2234942244028, 156.101505058599, -9.02727104242043) date limits: [‘2015-07-12’, ‘2022-09-13’] Number bands: 12 title: DEA Surface Reflectance (Sentinel-2B MSI) description: Sentinel-2B MSI Definitive ARD - NBART Pixel Quality bounding box: (110.294393028751, -44.7864137985832, 156.101505058599, -9.02727104242043) date limits: [‘2017-06-30’, ‘2022-09-13’] Number bands: 12 title: DEA Land Cover Calendar Year (Landsat) description: Geoscience Australia Landsat Land Cover Calendar Year Collection 2.0 bounding box: (112.731828633068, -44.2342184871416, 154.267421772154, -9.93509678400507) date limits: [‘1988-01-01’, ‘2020-01-01’] Number bands: 2 title: DEA Land Cover Environmental Descriptors description: Geoscience Australia Landsat Land Cover Calendar Year Collection 2.0 bounding box: (112.731828633068, -44.2342184871416, 154.267421772154, -9.93509678400507) date limits: [‘1988-01-01’, ‘2020-01-01’] Number bands: 5 title: DEA Fractional Cover (Landsat) description: Geoscience Australia Landsat Fractional Cover Collection 3 bounding box: (110.696007613984, -45.6734535062289, 156.154528040633, -8.13764292647926) date limits: [‘1986-08-16’, ‘2022-09-05’] Number bands: 4 title: DEA Fractional Cover Percentiles Calendar Year (Landsat) description: Geoscience Australia Landsat Fractional Cover Percentile Calendar Year Collection 3 bounding box: (112.343354889631, -44.2467683625153, 154.378185360282, -8.51120628432549) date limits: [‘1987-01-01’, ‘2021-01-01’] Number bands: 10 title: DEA Mangroves (Landsat) description: Geoscience Australia Landsat Mangrove Cover Calendar Year Collection 3 bounding box: (112.492257439061, -39.1292216144938, 154.264053741666, -9.5698963139854) date limits: [‘1987-01-01’, ‘2021-01-01’] Number bands: 1 title: GA Barest Earth (Sentinel-2) description: Sentinel-2 Barest Earth bounding box: (112.324372771065, -43.9381826788341, 154.70510751296, -8.82186564540388) date limits: [‘2017-01-01’, ‘2017-01-01’] Number bands: 10 title: GA Barest Earth (Landsat 8 OLI/TIRS) description: Landsat-8 Barest Earth pixel composite albers 25 metre, 100km tile, Australian Albers Equal Area projection (EPSG:3577) bounding box: (111.492400120054, -44.3357065215098, 155.066563941708, -8.83515695199939) date limits: [‘2013-01-01’, ‘2013-01-01’] Number bands: 6 title: GA Barest Earth (Landsat) description: Landsat-5/Landsat-7/Landsat-8 combined Barest Earth pixel composite albers 25 metre, 100km tile, Australian Albers Equal Area projection (EPSG:3577) bounding box: (111.033686003887, -44.4285210281062, 155.790571411147, -8.49453875182811) date limits: [‘1980-01-01’, ‘1980-01-01’] Number bands: 6 title: DEA Wetness Percentiles (Landsat) description: Geoscience Australia Landsat Tasseled Cap Wetness Percentiles Collection 2, 25 metre, 100km tile, Australian Albers Equal Area projection (EPSG:3577) bounding box: (112.501524524947, -44.315077785668, 154.340852639902, -9.07349125191758) date limits: [‘1987-01-01’, ‘1987-01-01’] Number bands: 3 title: DEA Tasseled Cap Indices Percentiles Calendar Year (Landsat) description: Geoscience Australia Landsat Tasseled Cap Percentile Calendar Year Collection 3 bounding box: (112.343354889631, -44.2467683625153, 154.378185360282, -8.51120628432549) date limits: [‘1987-01-01’, ‘2021-01-01’] Number bands: 9 title: DEA Water Observations (Landsat) description: Geoscience Australia Landsat Water Observations Collection 3 bounding box: (110.696007613984, -45.6734414490927, 156.154528040633, -9.07557070726103) date limits: [‘1986-08-16’, ‘2022-09-05’] Number bands: 1 title: DEA Water Observations Multi Year (Landsat) description: Geoscience Australia Landsat Water Observations Frequency Multi Year Collection 3 bounding box: (110.413246718272, -46.1419438144744, 157.044900204052, -8.10857383542487) date limits: [‘1986-01-01’, ‘1986-01-01’] Number bands: 3 title: DEA Water Observations Calendar Year (Landsat) description: Geoscience Australia Landsat Water Observations Frequency Calendar Year Collection 3 bounding box: (110.413246718272, -46.1419438144744, 157.044900204052, -8.10857383542487) date limits: [‘1986-01-01’, ‘2021-01-01’] Number bands: 3 title: DEA Water Observations April October (Landsat) description: Geoscience Australia Landsat Water Observations Frequency April October Collection 3 bounding box: (110.413246718272, -46.1419438144744, 157.044900204052, -8.10857383542487) date limits: [‘1986-04-01’, ‘2021-04-01’] Number bands: 3 title: DEA Water Observations November March (Landsat) description: Geoscience Australia Landsat Water Observations Frequency November March Collection 3 bounding box: (110.413246718272, -46.1419438144744, 157.044900204052, -8.21783704144064) date limits: [‘1987-11-01’, ‘2021-11-01’] Number bands: 3 title: DEA Multi-Year Water Observation Frequency Filtered Statistics (Landsat, DEPRECATED) description: Water Observations Space Statistics confidence filtered bounding box: (111.859562290899, -44.9351287319957, 155.169368098324, -9.00692244744483) date limits: [‘1970-01-01’, ‘1970-01-01’] Number bands: 2 title: DEA Multi-Year Clear Observation Statistics (Landsat, DEPRECATED) description: Water Observations Space Statistics bounding box: (112.99986111, -44.0008652894921, 153.999861110328, -10.0001388899999) date limits: [‘1970-01-01’, ‘1970-01-01’] Number bands: 3 title: DEA Multi-Year Wet Observation Statistics (Landsat, DEPRECATED) description: Water Observations Space Statistics bounding box: (112.99986111, -44.0008652894921, 153.999861110328, -10.0001388899999) date limits: [‘1970-01-01’, ‘1970-01-01’] Number bands: 3 title: DEA Multi-Year Water Observation Frequency Statistics (Landsat, DEPRECATED) description: Water Observations Space Statistics bounding box: (112.99986111, -44.0008652894921, 153.999861110328, -10.0001388899999) date limits: [‘1970-01-01’, ‘1970-01-01’] Number bands: 3 title: DEA Multi-Year Water Observation Confidence Statistics (Landsat, DEPRECATED) description: Water Observations Space Statistics confidence filtered bounding box: (111.859562290899, -44.9351287319957, 155.169368098324, -9.00692244744483) date limits: [‘1970-01-01’, ‘1970-01-01’] Number bands: 2 title: DEA Intertidal Extents (Landsat) description: Relative Extents Model bounding box: (112.459622677896, -43.7203758299765, 153.670408736335, -10.3096529183452) date limits: [‘1986-01-01’, ‘1986-01-01’] Number bands: 1 title: DEA Intertidal Extents confidence description: Average ndwi Standard Deviation, Confidence Layer bounding box: (112.459622677896, -43.7203758299765, 153.670408736335, -10.3096529183452) date limits: [‘1986-01-01’, ‘1986-01-01’] Number bands: 1 title: DEA Intertidal Elevation (Landsat) description: National Intertidal Digital Elevation Model 25m 1.0.0 bounding box: (112.223058990767, -43.8291965530654, 154.080299801132, -10.2371048142508) date limits: [‘1986-01-01’, ‘1986-01-01’] Number bands: 1 title: DEA High Tide Imagery (Landsat) description: High tide 20 percentage composites 25m v. 2.0.0 bounding box: (112.223058990767, -43.8291965530654, 154.080299801132, -10.2371048142508) date limits: [‘2000-01-01’, ‘2000-01-01’] Number bands: 6 title: DEA Low Tide Imagery (Landsat) description: Low tide 20 percentage composites 25m v. 2.0.0 bounding box: (112.223058990767, -43.8291965530654, 154.080299801132, -10.2371048142508) date limits: [‘2000-01-01’, ‘2000-01-01’] Number bands: 6 title: DEA Burnt Area Characteristic Layers (Sentinel 2 Near Real-Time, Provisional) description: Sentinel 2 Burnt Area Collection 3 (Provisional) bounding box: (111.966746816605, -44.3414673034495, 155.213824039639, -9.93000738897011) date limits: [‘2021-10-01’, ‘2022-09-19’] Number bands: None title: ALOS Displacement description: CEMP InSAR ALOS Displacement bounding box: (150.330509919584, -34.5250413940276, 151.258021405841, -33.772472435988) date limits: [‘2008-02-11’, ‘2010-10-22’] Number bands: 4 title: ALOS Velocity description: CEMP InSAR ALOS Velocity bounding box: (150.331038253243, -34.5250413940276, 151.258021405841, -33.772472435988) date limits: [‘2009-06-15’, ‘2009-06-15’] Number bands: 4 title: ENVISAT Displacement description: CEMP InSAR Envisat Displacement bounding box: (150.416357298779, -34.5283535864513, 151.184355816078, -33.5035077252927) date limits: [‘2006-06-26’, ‘2010-08-28’] Number bands: 4 title: ENVISAT Velocity description: CEMP InSAR Envisat Velocity bounding box: (150.416357298779, -34.5283535864513, 151.184355816078, -33.5035077252927) date limits: [‘2008-06-15’, ‘2008-06-15’] Number bands: 4 title: RADARSAT2 Displacement description: CEMP InSAR Radarsat-2 Displacement bounding box: (150.540420399293, -34.3792688432228, 151.151613477574, -33.8798432478719) date limits: [‘2015-07-15’, ‘2019-05-31’] Number bands: 4 title: RADARSAT2 Velocity description: CEMP InSAR Radarsat-2 Velocity bounding box: (150.540420399293, -34.3792688432228, 151.151613477574, -33.8798432478719) date limits: [‘2017-06-15’, ‘2017-06-15’] Number bands: 4 title: False Colour Mosaic description: ASTER bounding box: (112.917275536606, -44.013698912363, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 3 title: Regolith Ratios description: ASTER bounding box: (112.917275536606, -44.013698912363, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 3 title: AlOH Group Composition description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: AlOH Group Content description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: FeOH Group Content description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Ferric Oxide Composition description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Ferric Oxide Content description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Ferrous Iron Content MgOH/Carbonate description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Ferrous Iron Index description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Green Vegetation Content description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Gypsum Index description: ASTER bounding box: (112.917024138111, -43.7806027057097, 153.640358457438, -10.28257228) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Kaolin Group Index description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: MgOH Group Composition description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: MgOH Group Content description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Opaque Index description: ASTER bounding box: (112.917275536606, -43.7806433511675, 153.640054299875, -10.2856586) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: TIR Silica index description: ASTER bounding box: (112.917024138111, -43.7806027057097, 153.640358457438, -10.28257228) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: TIR Quartz Index description: ASTER bounding box: (112.917024138111, -43.7806027057097, 153.640358457438, -10.28257228) date limits: [‘2000-02-01’, ‘2000-02-01’] Number bands: 1 title: Multi-Scale Topographic Position description: Multi-scale Topographic Position Image bounding box: (112.9995833, -44.0004167, 153.9995833, -10.0004167) date limits: [‘2018-01-01’, ‘2018-01-01’] Number bands: 3 title: Weathering Intensity description: Weathering Intensity Model bounding box: (112.9995833, -44.0004167, 153.9995833, -10.0004167) date limits: [‘2018-01-01’, ‘2018-01-01’] Number bands: 1","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dem.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"download_dem()","text":"Digital Elevation Model (DEM) Australia derived STRM 1 Second Grid - Hydrologically Enforced Module name: getdata_dem.py Bounding Box = Long_min: 112.00, Lat_min: -44.00, Long_max: 154.00, Lat_max: -10.00 Updates: None Resolution: native: 1 arcsec Source: https://www.clw.csiro.au/aclep/soilandlandscapegrid/ProductDetails.html License: Creative Commons Attribution 4.0 International (CC 4.0) Attribution: Commonwealth Australia (Geoscience Australia)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/dem.html","id":"layer","dir":"Articles","previous_headings":"","what":"Layer","title":"download_dem()","text":"Title: DEM SRTM 1 Second Hydro Enforced Description: 1 second SRTM derived hydrologically enforced DEM (DEM-H Version 1.0) 1 arc second (~30 m) gridded digital elevation model (DEM) hydrologically conditioned drainage enforced. DEM-H captures flow paths based SRTM elevations mapped stream lines, supports delineation catchments related hydrological attributes.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/landscape.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"download_landscape()","text":"landscape attribute products available Soil Landscape Grid Australia (SLGA) derived DEM-S, smoothed version national 1 second resolution Digital Elevation Model, derived 1 second resolution Shuttle Radar Topography Mission (SRTM) data acquired NASA February 2000. Module name: getdata_landscape.py Resolution: 3 arcsec Updates: None Source: https://www.clw.csiro.au/aclep/soilandlandscapegrid/ProductDetails.html” License: Creative Commons Attribution 4.0 International (CC 4.0) Attribution: CSIRO Australia, TERN (University Queensland) Bounding Box: (112.99958, -44.00042, 153.99958, -10.0004)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/landscape.html","id":"layers","dir":"Articles","previous_headings":"","what":"Layers","title":"download_landscape()","text":"key: ‘1’ title: Prescott Index description: Prescott Index derived 1 second DEM-S version 0.1 key: ‘2’ title: Net Radiation [January] description: None key: ‘3’ title: Net Radiation [July] description: None key: ‘4’ title: Total Shortwave Sloping Surf [January] description: None key: ‘5’ title: Total Shortwave Sloping Surf [July] description: None key: ‘6’ title: Slope [percent] description: Percent slope (3” resolution) derived 1 second DEM-S version 0.1 key: ‘7’ title: Slope [percent] Median 300m Radius description: Median Percent slope 300m radius (3” resolution) derived 1 second DEM-S version 0.1 key: ‘8’ title: Slope Relief Class description: Slope relief (3” resolution) derived 1 second DEM-S version 0.1 key: ‘9’ title: Aspect description: Aspect (3” resolution) derived 1 second DEM-S version 0.1 key: ‘10’ title: Relief [1000m radius] description: 1000 m elevation range (3” resolution) derived 1 second DEM-S version 0.1 key: ‘11’ title: Relief [300m radius] description: 300 m elevation range (3” resolution) derived 1 second DEM-S version 0.1 key: ‘12’ title: Topographic Wetness Index description: Topographic Wetness Index (3” resolution) derived 1 second DEM-H version 1.0 key: ‘13’ title: TPI Mask description: None key: ‘14’ title: SRTM_TopographicPositionIndex description: Topographic position index (3” resolution) derived 1 second DEM-S version 0.1 key: ‘15’ title: Contributing Area [partial] description: Contributing Area - Multiple Flow Direction (Partial), 3” resolution, derived 1 second DEM-H version 1.0 key: ‘16’ title: MrVBF description: Multi-resolution Valley Bottom Flatness (MrVBF) 3 second resolution derived 1 second DEM-S version 1.0 key: ‘17’ title: Plan Curvature description: Plan curvature (3” resolution) derived 1 second DEM-S version 0.1 key: ‘18’ title: Profile Curvature description: Profile curvature (3”resolution) derived 1 second DEM-S version 0.1","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/radiometric.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"download_radiometric()","text":"radiometric sub-collection Geoscience Australia Geophysics Reference Data Collection compilations radiometric data extensive archive geophysical surveys dating back 1947, contained sub-collections collection. individual survey datasets acquired Geoscience Australia State Territory Government partners. compilations radiometric data involved levelling merging (mosaicking) regularly interpolated grid (raster) data, selected individual geophysical surveys, near-seamless national scale grids datatype creating derivations thereof. selected individual surveys chosen based spatial resolution accuracy individual surveys within given area. Module name: getdata_radiometric.py Resolution: 100m (0.001 deg) Updates: None Source: https://opus.nci.org.au/display/Help/Datasets License: Creative Commons Attribution 4.0 International (CC 4.0) Attribution: Geoscience Australia. WCS service relies GSKY - Scalable, Distributed Geospatial Data Service National Centre Environmental Information (NCI).","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/radiometric.html","id":"layers","dir":"Articles","previous_headings":"","what":"Layers","title":"download_radiometric()","text":"title: Radiometric Grid Australia (Radmap) v4 2019 unfiltered terrestrial dose rate description: unfiltered terrestrial dose rate grid derivative 2019 radiometric gamma-ray grid Australia, merge 600 individual gamma-ray spectrometric surveys. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.unfiltered terrestrial dose rate grid derived linear combination unfiltered K, U Th grids, cell size 100m (0.001 degrees). title: Radiometric Grid Australia (Radmap) v4 2019 filtered terrestrial dose rate description: filtered terrestrial dose rate grid derivative 2019 radiometric gamma-ray grid Australia, made combination 600 individual survey grids. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.terrestrial dose rate grid derived linear combination filtered K, U Th grids. low pass filter applied unfiltered grid generate filtered terrestrial dose rate grid. grid cell size 100m (0.001 degrees). title: Radiometric Grid Australia (Radmap) v4 2019 unfiltered pct potassium description: unfiltered potassium grid derivative 2019 radiometric grid Australia. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector. 2019 unfiltered potassium grid cell size 100 m (0.001 degrees) shows potassium element concentrations Australia region. Potassium seventh abundant element Earth’s crust. potassium concentration grid can used locate minerals compounds containing potassium. title: Radiometric Grid Australia (Radmap) v4 2019 filtered pct potassium grid description: filtered potassium grid derivative 2019 radiometric gamma-ray grid Australia. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium, uranium thorium. data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 filtered potassium grid cell size 100m (0.001 degrees) shows potassium element concentrations Australia region. obtained applying low-pass filter original potassium grid. Potassium seventh abundant element Earth’s crust. potassium concentration grid can used locate minerals compounds containing potassium. title: Radiometric Grid Australia (Radmap) v4 2019 unfiltered ppm thorium description: unfiltered thorium grid derivative 2019 radiometric gamma-ray grid Australia merge 600 individual gamma-ray spectrometric surveys. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 unfiltered thorium grid cell size 100 m (0.001 degrees) shows thorium element concentrations Australia region. title: Radiometric Grid Australia (Radmap) v4 2019 filtered ppm thorium description: filtered thorium grid derivative 2019 radiometric gamma-ray grid Australia. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector. 2019 filtered thorium grid derived seamlessly merging 600 airborne gamma-ray spectrometric surveys. final grid cell size 100m (0.001 degrees) shows thorium element concentrations Australia region. title: Radiometric Grid Australia (Radmap) v4 2019 ratio thorium potassium description: thorium potassium grid derivative 2019 radiometric gamma-ray grid Australia. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 thorium potassium derived seamlessly merging 600 airborne gamma-ray spectrometric surveys. final grid cell size 100m (0.001 degrees) derived filtered thorium potassium grids. title: Radiometric Grid Australia (Radmap) v4 2019 ratio uranium squared thorium description: uranium squared thorium grid derivative 2019 radiometric gamma-ray grid Australia. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 uranium squared thorium derived seamlessly merging 600 airborne gamma-ray spectrometric surveys. final grid cell size 100m (0.001 degrees) derived filtered uranium thorium grids. title: Radiometric Grid Australia (Radmap) v4 2019 unfiltered ppm uranium description: unfiltered uranium grid derivative 2019 radiometric gamma-ray grid Australia merge 600 individual gamma-ray spectrometric surveys. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium, uranium thorium. data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 unfiltered uranium grid cell size 100m (0.001 degrees) shows uranium element concentrations Australia region. title: Radiometric Grid Australia (Radmap) v4 2019 filtered ppm uranium description: filtered uranium grid derivative 2019 radiometric gamma-ray grid Australia. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 filtered uranium grid derived seamlessly merging 600 airborne gamma-ray spectrometric surveys. final grid cell size 100m (0.001 degrees) shows uranium element concentrations Australia region. title: Radiometric Grid Australia (Radmap) v4 2019 ratio uranium potassium description: uranium potassium grid derivative 2019 radiometric gamma-ray grid Australia comprising 600 airborne gamma-ray spectrometric surveys. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 uranium potassium grid cell size 100 m (0.001 degrees) derived filtered uranium potassium grids. title: Radiometric Grid Australia (Radmap) v4 2019 ratio uranium thorium description: uranium thorium grid derivative 2019 radiometric gamma-ray grid Australia merge 600 individual gamma-ray spectrometric surveys. radiometric, gamma-ray spectrometric method, measures natural variations gamma-rays detected near Earth’s surface result natural radioactive decay potassium (K), uranium (U) thorium (Th). data collected airborne geophysical surveys conducted Commonwealth, State Northern Territory Governments private sector.2019 uranium thorium grid cell size 100 m (0.001 degrees) derived filtered uranium thorium grids.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/silo.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"download_silo()","text":"SILO containing continuous daily climate data Australia 1889 present. Module name: getdata_silo.py Bounding Box = Long_min: 112.00, Lat_min: -44.00, Long_max: 154.00, Lat_max: -10.00 Updates: Daily Resolution: native: 180 arcsec Source: https://www.longpaddock.qld.gov.au/silo/gridded-data/ License: Creative Commons Attribution 4.0 International (CC 4.0) Attribution: State Queensland (Queensland Department Environment Science) 2020.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/silo.html","id":"layers","dir":"Articles","previous_headings":"","what":"Layers","title":"download_silo()","text":"‘daily_rain’ (Daily rainfall, mm) ‘monthly_rain’ (Monthly rainfall, mm) ‘max_temp’ (Maximum temperature, deg C) ‘min_temp’ (Minimum temperature. deg C) ‘vp’ (Vapour pressure, hPa) ‘vp_deficit’ (Vapour pressure deficit, hPa) ‘evap_pan’ (Class pan evaporation, mm) ‘evap_syn’ (Synthetic estimate, mm) ‘evap_comb’ (Combination: synthetic estimate pre-1970, class pan 1970 onwards, mm) ‘evap_morton_lake’ (Morton’s shallow lake evaporation, mm) ‘radiation’ (Solar radiation: Solar exposure, consisting direct diffuse components, MJ/m2) ‘rh_tmax’ (Relative humidity: Relative humidity time maximum temperature, %) ‘rh_tmin’ (Relative humidity time minimum temperature, %) ‘et_short_crop’ (Evapotranspiration FAO564 short crop, mm) ‘et_tall_crop’ (ASCE5 tall crop6, mm) ‘et_morton_actual’ (Morton’s areal actual evapotranspiration, mm) ‘et_morton_potential’ (Morton’s point potential evapotranspiration, mm) ‘et_morton_wet’ (Morton’s wet-environment areal potential evapotranspiration land, mm) ‘mslp’ (Mean sea level pressure Mean sea level pressure, hPa)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/slga.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"download_slga()","text":"Soil Facility produced range digital soil attribute products Soil Landscape Grid Australia (SLGA). product contains six digital soil attribute maps, upper lower confidence limits, representing soil attribute six depths: 0-5cm, 5-15cm, 15-30cm, 30-60cm, 60-100cm 100-200cm. Module name: getdata_slga.py Bounding Box: Long_min: 113.00, Lat_min: -44.00, Long_max: 154.00, Lat_max: -10.00 Period (temporal coverage; approximately): 1950-2013 Resolution: 3 arcsec Source: https://www.clw.csiro.au/aclep/soilandlandscapegrid/ProductDetails-SoilAttributes.html License: Creative Commons Attribution 3.0 (CC ) Attribution: CSIRO Australia, TERN (University Queensland), Geoscience Australia","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/articles/slga.html","id":"layers","dir":"Articles","previous_headings":"","what":"Layers","title":"download_slga()","text":"Title: Bulk Density (whole earth) Description: Bulk Density whole soil (including coarse fragments) mass per unit volume method equivalent core method Unit: g/cm3 Title: Organic Carbon Description: Mass fraction carbon weight < 2 mm soil material determined dry combustion 900 Celcius Unit: % Title: Clay Description: < 2 um mass fraction < 2 mm soil material determined using pipette method Unit: % Title: Silt Description: 2-20 um mass fraction < 2 mm soil material determined using pipette method Unit: % Title: Sand Description: 20 um - 2 mm mass fraction < 2 mm soil material determined using pipette method Unit: % Title: pH (CaCl2) Description: pH 1:5 soil/0.01M calcium chloride extract Unit: none Title: Available Water Capacity Description: Available water capacity computed specified depth increments Unit: % Title: Total Nitrogen Description: Mass fraction total nitrogen soil weight Unit: % Title: Total Phosphorus Description: Mass fraction total phosphorus soil weight Unit: % Title: Effective Cation Exchange Capacity Description: Cations extracted using barium chloride (BaCl2) plus exchangeable H + Al Unit: meq/100g Title: Depth Regolith Description: Depth hard rock. Depth inclusive regolith. Unit: m Title: Depth Soil Description: Depth soil profile (& B horizons) Unit: m","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Januar Harianto. Author, maintainer. Sebastian Haan. Author. Nathaniel Butterworth. Author.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harianto J, Haan S, Butterworth N (2023). dataharvester: Download Process Geospatial Data. R package version 0.1.2, https://sydney-informatics-hub.github.io/dataharvester/.","code":"@Manual{,   title = {dataharvester: Download and Process Geospatial Data},   author = {Januar Harianto and Sebastian Haan and Nathaniel Butterworth},   year = {2023},   note = {R package version 0.1.2},   url = {https://sydney-informatics-hub.github.io/dataharvester/}, }"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"Download and Process Geospatial Data","text":"output following 3 lines code run configuration file, downloads 16 images 7 API sources:","code":"library(dataharvester) initialise_harvester(\"r-reticulate\") harvest(\"~/Documents/democonfig.yaml\", plot = TRUE, contour = FALSE)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Process Geospatial Data","text":"Install development version package GitHub using install_github() remotes devtools:","code":"# install.packages(\"remotes\") # uncomment and run this line if necessary remotes::install_github(\"sydney-informatics-hub/dataharvester\")  library(dataharvester) # load package"},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"headless-run","dir":"","previous_headings":"Examples","what":"“Headless” run","title":"Download and Process Geospatial Data","text":"Run initialise_harvester() loading package. function helps initialise package, verifies package dependencies connect Earth Engine API. Note default environment r-reticulate, can provide different name environment used projects. first initialisation may take minutes dependencies need installed. Note: connecting Earth Engine API requires existing Google account. Depending OS, web browser popup may appear guided connect API. Otherwise, link provided, need follow instructions finalise authentication process. information can found documentation. , run harvest(), parses YAML config file:","code":"library(dataharvester) initialise_harvester(\"r-reticulate\", earthengine = TRUE) harvest(path_to_config = \"path/to/config.yaml\")"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"manual-downloads","dir":"","previous_headings":"Examples","what":"Manual downloads","title":"Download and Process Geospatial Data","text":"harvest() function essentially wrapper API calls available Data-Harvester. Individual functions available data sources. example, code downloads Bulk Density data SLGA specified region saves downloads folder working directory: Access Google Earth Engine API aimed simplifying common tasks beginners. example, example code performs following (9 lines code): Access Google Earth Engine Data Catalog Filter date coordinates Scaling, offsetting, cloud shadow masking Automatically calculate Awesome Spectral Indices (e.g. NDVI) Pixel stretching image preview Mapping results Downloading image(s) specified resolution location Splitting large images automatically allow file sizes exceed limit(s) set API (~32 MB) Note functions can chained/simplified using native (|>) dplyr (%>%) pipes. functions meant provide full functionality GEE API. time, user may take Earth Engine object process directly using API - case, rgee R.","code":"slga <- download_slga(   layer = \"Bulk_Density\",   bounding_box = c(149.769345, -30.335861, 149.949173, -30.206271),   out_path = \"downloads/\",   resolution = 6,   depth_min = 0,   depth_max = 5 ) # Make sure that GEE API is initialised initialise_harvester(\"r-reticulate\", earthengine = TRUE) # 1. Define dataset img <- collect_ee(   collection = \"LANDSAT/LC09/C02/T1_L2\",   coords = c(149.769345, -30.335861, 149.949173, -30.206271),   date = \"2021-06-01\",   end_date = \"2022-06-01\" ) # 2. Preprocess (cloud masking, scale and offsetting enabled by default) img <- preprocess_ee(img, spectral = \"NDVI\") # 3. Visualise (optional) img <- map_ee(img, bands = \"NDVI\") # 4. Download at 100m/px resolution img <- download_ee(img, bands = \"NDVI\", scale = 100, out_path = \"downloads/\") # Extract ee.Image or ee.ImageCollection object gee_obj <- img$ee_image  # Now use `gee_obj` anywhere that can process Earth Engine Object data..."},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"spatialtemporal-buffering","dir":"","previous_headings":"","what":"Spatial/temporal buffering","title":"Download and Process Geospatial Data","text":"NEW data downloaded, dataharvester provides functions assist data aggregation space time. documented soon.","code":"#TODO"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Download and Process Geospatial Data","text":"Acknowledgements important way us demonstrate value bring research. research outcomes vital ongoing funding Sydney Informatics Hub. make use software research project, please include following acknowledgement: “research supported Sydney Informatics Hub, Core Research Facility University Sydney, Agricultural Research Federation (AgReFed).”","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Download and Process Geospatial Data","text":"software developed Sydney Informatics Hub, core research facility University Sydney, part Data Harvesting project Agricultural Research Federation (AgReFed). AgReFed supported Australian Research Data Commons (ARDC) Australian Government National Collaborative Research Infrastructure Strategy (NCRIS). also like acknowledge use following Python packages dataharvester, used code Data-Harvester: geemap, wxee eemont.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Download and Process Geospatial Data","text":"© 2022 University Sydney free software: can redistribute /modify terms GNU Lesser General Public License (LGPL version 3) published Free Software Foundation.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/Llara.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data Llara — Llara","title":"Example data Llara — Llara","text":"dataset.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/Llara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data Llara — Llara","text":"","code":"Llara"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/Llara.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data Llara — Llara","text":"dataset containing x y coordinates. Lat latitude Long longitude Easting easting Northing northing Depth depth range, cm","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/aggregate_ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate an Earth Engine Image Collection by period — aggregate_ee","title":"Aggregate an Earth Engine Image Collection by period — aggregate_ee","text":"Performs simple temporal aggregation Earth Engine Image collections month year. example, can calculate maximum normalized difference vegetation index (NDVI) area interest year. Note processing times can increase substantially increased number images.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/aggregate_ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate an Earth Engine Image Collection by period — aggregate_ee","text":"","code":"aggregate_ee(object, frequency = \"month\", reduce_by = NULL)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/aggregate_ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate an Earth Engine Image Collection by period — aggregate_ee","text":"object object: data object produced collect_ee() frequency str, optional: either \"month\" \"year\" accepted reduce_by str, optional: summary statistic technique perform aggregated data. NULL (default), calculate mean per period","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/aggregate_ee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate an Earth Engine Image Collection by period — aggregate_ee","text":"updated collect_ee() object can passed map_ee() download_ee()","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/aggregate_ee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate an Earth Engine Image Collection by period — aggregate_ee","text":"","code":"if (FALSE) { img <- collect_ee(   collection = \"LANDSAT/LC09/C02/T1_L2\",   coords = c(149.769345, -30.335861, 149.949173, -30.206271),   date = \"2021-06-01\",   end_date = \"2022-06-01\" )  preprocess_ee(img, spectral = \"NDVI\") aggregate_ee(img, reduce_by = \"median\") }"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/authenticate_ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate to Google Earth Engine API — authenticate_ee","title":"Authenticate to Google Earth Engine API — authenticate_ee","text":"Utilises google-cloud-sdk initialise authenticate Earth Engine API. API token containing user's credentials saved locally can used authenticate vial Application Default Credentials.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/authenticate_ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate to Google Earth Engine API — authenticate_ee","text":"","code":"authenticate_ee(auth_mode = \"gcloud\")"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/authenticate_ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate to Google Earth Engine API — authenticate_ee","text":"auth_mode Authentication mode access GEE API. Using \"gcloud\" normally works. remaining three options identical (\"notebook\", \"rstudiocloud\", \"binder\"), just named differently context","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/collect_ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Google Earth Engine data to collect — collect_ee","title":"Define Google Earth Engine data to collect — collect_ee","text":"Define Google Earth Engine data collect","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/collect_ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Google Earth Engine data to collect — collect_ee","text":"","code":"collect_ee(   collection = NULL,   coords = NULL,   date = NULL,   end_date = NULL,   buffer = NULL,   bound = FALSE,   config = NULL )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/collect_ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Google Earth Engine data to collect — collect_ee","text":"collection string: name Google Earth Engine collection. Collections can found Google Earth Engine Catalog coords numeric: GPS coordinates WGS84 [East, North]. Minimum one set coordinates provided create point coordinate. one set coordinates provided, polygon created date string: Start date image(s) collected YYYY-MM-DD YYYY format. YYY-MM-DD provided, search specific date (may contain image), unless end_date also provided, collect images two dates. YYYY provided, images within specified year included collection end_date string, optional:  paired date argument, can define date range YYYY-MM-DD YYYY format buffer integer, optional: coords single point, buffer can used create circular buffer specific radius metres. coords contains one set coordinates, argument nothing bound logical, optional: buffer contains integer value, agrument convert circular buffer bounding box instead. Defaults FALSE config string, optional: Path configuration file .yaml format. provided, arguments ignored function refer configuration file determine argument values","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/collect_ee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define Google Earth Engine data to collect — collect_ee","text":"object containing attributes necessary preprocess download images *_ee() functions","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/collect_ee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define Google Earth Engine data to collect — collect_ee","text":"","code":"if (FALSE) { collect_ee(   collection = \"LANDSAT/LC09/C02/T1_L2\",   coords = c(149.769345, -30.335861, 149.949173, -30.206271),   date = \"2021-06-01\",   end_date = \"2022-06-01\" ) }"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dea.html","id":null,"dir":"Reference","previous_headings":"","what":"Download from Digital Earth Australia — download_dea","title":"Download from Digital Earth Australia — download_dea","text":"Wrapper funtion get layers Digital Earth Australia collections.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download from Digital Earth Australia — download_dea","text":"","code":"download_dea(   layer,   bounding_box,   out_path,   years,   resolution,   crs = \"EPSG:4326\",   format_out = \"GeoTIFF\" )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download from Digital Earth Australia — download_dea","text":"layer Layer name(s) download vector strings bounding_box numeric vector coordinate values used generate bounding box around interest EPSG:4326 format, example, c(min_x, min_y, max_x, max_y) out_path Path output/download folder, e.g. 'downloads/' years Year(s) download data (available), e.g. 2019:2021 c(2015, 2020) resolution integer value resolution, arc seconds crs Coordinate referencing system (CRS) use. Currently, accepts 'EPSG:4326' format_out Output format, either \"GeoTIFF\" \"NetCDF\". Defaults \"GeoTIFF\"","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download from Digital Earth Australia — download_dea","text":"list filenames (files downloaded processed)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dea.html","id":"layers","dir":"Reference","previous_headings":"","what":"Layers","title":"Download from Digital Earth Australia — download_dea","text":"ga_ls_ard_3: DEA Surface Reflectance (Landsat) s2_nrt_granule_nbar_t: DEA Surface Reflectance (Sentinel-2 Near Real-Time) s2_ard_granule_nbar_t: DEA Surface Reflectance (Sentinel-2) ga_ls8c_nbart_gm_cyear_3: DEA GeoMAD (Landsat 8 OLI-TIRS) ga_ls7e_nbart_gm_cyear_3: DEA GeoMAD (Landsat 7 ETM+) ga_ls5t_nbart_gm_cyear_3: DEA GeoMAD (Landsat 5 TM) ga_ls8c_ard_3: DEA Surface Reflectance (Landsat 8 OLI-TIRS) ga_ls7e_ard_3: DEA Surface Reflectance (Landsat 7 ETM+) ga_ls5t_ard_3: DEA Surface Reflectance (Landsat 5 TM) ga_ls8c_ard_provisional_3: DEA Surface Reflectance (Landsat 8 OLI-TIRS, Provisional) ga_ls7e_ard_provisional_3: DEA Surface Reflectance (Landsat 7 ETM+, Provisional) ga_ls_ard_provisional_3: DEA Surface Reflectance (Landsat, Provisional) s2b_nrt_granule_nbar_t: DEA Surface Reflectance (Sentinel-2B MSI Near Real-Time) s2a_nrt_granule_nbar_t: DEA Surface Reflectance (Sentinel-2A MSI Near Real-Time) s2_nrt_provisional_granule_nbar_t: DEA Surface Reflectance (Sentinel-2, Provisional) s2b_nrt_provisional_granule_nbar_t: DEA Surface Reflectance (Sentinel-2B MSI, Provisional) s2a_nrt_provisional_granule_nbar_t: DEA Surface Reflectance (Sentinel-2A MSI, Provisional) s2a_ard_granule_nbar_t: DEA Surface Reflectance (Sentinel-2A MSI) s2b_ard_granule_nbar_t: DEA Surface Reflectance (Sentinel-2B MSI) ga_ls_landcover: DEA Land Cover Calendar Year (Landsat) ga_ls_landcover_descriptors: DEA Land Cover Environmental Descriptors ga_ls_fc_3: DEA Fractional Cover (Landsat) ga_ls_fc_pc_cyear_3: DEA Fractional Cover Percentiles Calendar Year (Landsat) ga_ls_mangrove_cover_cyear_3: DEA Mangroves (Landsat) s2_barest_earth: GA Barest Earth (Sentinel-2) ls8_barest_earth_mosaic: GA Barest Earth (Landsat 8 OLI/TIRS) landsat_barest_earth: GA Barest Earth (Landsat) ga_ls_tcw_percentiles_2: DEA Wetness Percentiles (Landsat) ga_ls_tc_pc_cyear_3: DEA Tasseled Cap Indices Percentiles Calendar Year (Landsat) ga_ls_wo_3: DEA Water Observations (Landsat) ga_ls_wo_fq_myear_3: DEA Water Observations Multi Year (Landsat) ga_ls_wo_fq_cyear_3: DEA Water Observations Calendar Year (Landsat) ga_ls_wo_fq_apr_oct_3: DEA Water Observations April October (Landsat) ga_ls_wo_fq_nov_mar_3: DEA Water Observations November March (Landsat) wofs_filtered_summary: DEA Multi-Year Water Observation Frequency Filtered Statistics (Landsat, DEPRECATED) wofs_summary_clear: DEA Multi-Year Clear Observation Statistics (Landsat, DEPRECATED) wofs_summary_wet: DEA Multi-Year Wet Observation Statistics (Landsat, DEPRECATED) Water Observations Space Statistics: DEA Multi-Year Water Observation Frequency Statistics (Landsat, DEPRECATED) wofs_filtered_summary_confidence: DEA Multi-Year Water Observation Confidence Statistics (Landsat, DEPRECATED) ITEM_V2.0.0: DEA Intertidal Extents (Landsat) ITEM_V2.0.0_Conf: DEA Intertidal Extents confidence NIDEM: DEA Intertidal Elevation (Landsat) high_tide_composite: DEA High Tide Imagery (Landsat) low_tide_composite: DEA Low Tide Imagery (Landsat) ga_s2_ba_provisional_3: DEA Burnt Area Characteristic Layers (Sentinel 2 Near Real-Time, Provisional) alos_displacement: ALOS Displacement alos_velocity: ALOS Velocity envisat_displacement: ENVISAT Displacement envisat_velocity: ENVISAT Velocity radarsat2_displacement: RADARSAT2 Displacement radarsat2_velocity: RADARSAT2 Velocity aster_false_colour: False Colour Mosaic aster_regolith_ratios: Regolith Ratios aster_aloh_group_composition: AlOH Group Composition aster_aloh_group_content: AlOH Group Content aster_feoh_group_content: FeOH Group Content aster_ferric_oxide_composition: Ferric Oxide Composition aster_ferric_oxide_content: Ferric Oxide Content aster_ferrous_iron_content_in_mgoh: Ferrous Iron Content MgOH/Carbonate aster_ferrous_iron_index: Ferrous Iron Index aster_green_vegetation: Green Vegetation Content aster_gypsum_index: Gypsum Index aster_kaolin_group_index: Kaolin Group Index aster_mgoh_group_composition: MgOH Group Composition aster_mgoh_group_content: MgOH Group Content aster_opaque_index: Opaque Index aster_silica_index: TIR Silica index aster_quartz_index: TIR Quartz Index multi_scale_topographic_position: Multi-Scale Topographic Position weathering_intensity: Weathering Intensity","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Geoscience Australia DEM grid data — download_dem","title":"Download Geoscience Australia DEM grid data — download_dem","text":"Wrapper funtion get layers Geoscience Australia DEM 1 arc second grid.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Geoscience Australia DEM grid data — download_dem","text":"","code":"download_dem(layer, bounding_box, out_path, resolution = 1)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Geoscience Australia DEM grid data — download_dem","text":"layer Layer name(s) download vector strings bounding_box numeric vector coordinate values used generate bounding box around interest EPSG:4326 format, example, c(min_x, min_y, max_x, max_y) out_path Path output/download folder, e.g. 'downloads/' resolution integer value resolution, arc seconds","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Geoscience Australia DEM grid data — download_dem","text":"list filenames (files downloaded processed)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_dem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Geoscience Australia DEM grid data — download_dem","text":"layer DEM_1s used right now can called just DEM.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Download an Earth Engine Image or Image Collection — download_ee","title":"Download an Earth Engine Image or Image Collection — download_ee","text":"Images saved GeoTIFF (.tif) files containing geospatial data, unless otherwise specified out_format.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download an Earth Engine Image or Image Collection — download_ee","text":"","code":"download_ee(   object,   bands = NULL,   scale = NULL,   out_path = NULL,   out_format = NULL,   overwrite = TRUE )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download an Earth Engine Image or Image Collection — download_ee","text":"object object: data object produced collect_ee() bands string: string list strings representing bands downloaded scale numeric, optional: number represeting scale pixel metres. set NULL, use scale 100 m. Defaults NULL out_path string, optional: string representing path output directory. set NULL, use current working directory add \"downloads/\" folder. Defaults NULL out_format string, optional: Save image GeoTIFF (.tif), JPEG (.jpg) PNG (.png). Defaults .tif overwrite logical, optional: overwrite existing file already exists. Defaults NULL","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_ee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download an Earth Engine Image or Image Collection — download_ee","text":"","code":"NULL #> NULL"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Download from SLGA Landscape Attributes — download_landscape","title":"Download from SLGA Landscape Attributes — download_landscape","text":"Download SLGA Landscape Attributes","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download from SLGA Landscape Attributes — download_landscape","text":"","code":"download_landscape(layer, bounding_box, out_path, resolution = 3)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_landscape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download from SLGA Landscape Attributes — download_landscape","text":"layer Layer name(s) download vector strings bounding_box numeric vector coordinate values used generate bounding box around interest EPSG:4326 format, example, c(min_x, min_y, max_x, max_y) out_path Path output/download folder, e.g. 'downloads/' resolution r params(resolution)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_landscape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download from SLGA Landscape Attributes — download_landscape","text":"list filenames (files downloaded processed)","code":""},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_landscape.html","id":"layers","dir":"Reference","previous_headings":"","what":"Layers","title":"Download from SLGA Landscape Attributes — download_landscape","text":"Prescott_index net_radiation_jan net_radiation_july total_shortwave_sloping_surf_jan total_shortwave_sloping_surf_july Slope Slope_median_300m Slope_relief_class Aspect Relief_1000m Relief_300m Topographic_wetness_index TPI_mask SRTM_TopographicPositionIndex Contributing_area MrVBF Plan_curvature Profile_curvature","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_radiometric.html","id":null,"dir":"Reference","previous_headings":"","what":"Download from Geosciences Australia's Radiometric Map of Australia — download_radiometric","title":"Download from Geosciences Australia's Radiometric Map of Australia — download_radiometric","text":"Download Geosciences Australia's Radiometric Map Australia","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_radiometric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download from Geosciences Australia's Radiometric Map of Australia — download_radiometric","text":"","code":"download_radiometric(   layer,   bounding_box,   out_path,   resolution = 1,   crs = \"EPSG:4326\",   format_out = \"GeoTIFF\" )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_radiometric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download from Geosciences Australia's Radiometric Map of Australia — download_radiometric","text":"layer Layer name(s) download vector strings bounding_box numeric vector coordinate values used generate bounding box around interest EPSG:4326 format, example, c(min_x, min_y, max_x, max_y) out_path Path output/download folder, e.g. 'downloads/' resolution integer value resolution, arc seconds crs Coordinate referencing system (CRS) use. Currently, accepts 'EPSG:4326' format_out File format downloaded file. Can \"GeoTIFF\" \"NetCDF\". Defaults \"GeoTIFF\"","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_radiometric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download from Geosciences Australia's Radiometric Map of Australia — download_radiometric","text":"list filenames (files downloaded processed)","code":""},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_radiometric.html","id":"layers","dir":"Reference","previous_headings":"","what":"Layers","title":"Download from Geosciences Australia's Radiometric Map of Australia — download_radiometric","text":"radmap2019_grid_dose_terr_awags_rad_2019 radmap2019_grid_dose_terr_filtered_awags_rad_2019 radmap2019_grid_k_conc_awags_rad_2019 radmap2019_grid_k_conc_filtered_awags_rad_2019 radmap2019_grid_th_conc_awags_rad_2019 radmap2019_grid_th_conc_filtered_awags_rad_2019 radmap2019_grid_thk_ratio_awags_rad_2019 radmap2019_grid_u2th_ratio_awags_rad_2019 radmap2019_grid_u_conc_awags_rad_2019 radmap2019_grid_u_conc_filtered_awags_rad_2019 radmap2019_grid_uk_ratio_awags_rad_2019 radmap2019_grid_uth_ratio_awags_rad_2019","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_silo.html","id":null,"dir":"Reference","previous_headings":"","what":"Download from SILO database — download_silo","title":"Download from SILO database — download_silo","text":"Download SILO database","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_silo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download from SILO database — download_silo","text":"","code":"download_silo(   layer,   bounding_box,   out_path,   years,   format_out = \"tif\",   delete_temp = FALSE )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_silo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download from SILO database — download_silo","text":"layer Layer name(s) download vector strings bounding_box numeric vector coordinate values used generate bounding box around interest EPSG:4326 format, example, c(min_x, min_y, max_x, max_y) out_path Path output/download folder, e.g. 'downloads/' years Year(s) download data (available), e.g. 2019:2021 c(2015, 2020) format_out Exported file format. \"tif\" currently available. Defaults \"tif\" delete_temp Delete temporary files created. Defaults FALSE","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_silo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download from SILO database — download_silo","text":"list filenames (files downloaded processed)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_slga.html","id":null,"dir":"Reference","previous_headings":"","what":"Download from SLGA (Soil Atributes) — download_slga","title":"Download from SLGA (Soil Atributes) — download_slga","text":"Wrapper funtion get layers Soil Landscape Grid Australia (SLGA).","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_slga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download from SLGA (Soil Atributes) — download_slga","text":"","code":"download_slga(   layer,   bounding_box,   out_path,   resolution = 3,   depth_min = 0,   depth_max = 200,   get_ci = TRUE,   verbose = FALSE )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_slga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download from SLGA (Soil Atributes) — download_slga","text":"layer Layer name(s) download vector strings bounding_box numeric vector coordinate values used generate bounding box around interest EPSG:4326 format, example, c(min_x, min_y, max_x, max_y) out_path Path output/download folder, e.g. 'downloads/' resolution integer value resolution, arc seconds depth_min, depth_max SLGA layers can filtered specific depths. Minimum maximum depths can set using depth_min depth_max. Defaults 0 200, respectively get_ci Also download upper lower 95% confidence limits layer. Defaults TRUE verbose Print much information possible debug log","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_slga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download from SLGA (Soil Atributes) — download_slga","text":"list filenames (files downloaded processed)","code":""},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/download_slga.html","id":"layers","dir":"Reference","previous_headings":"","what":"Layers","title":"Download from SLGA (Soil Atributes) — download_slga","text":"Bulk_Density Organic_Carbon Clay Silt Sand pH_CaCl2 Available_Water_Capacity Total_Nitrogen Total_Phosphorus Effective_Cation_Exchange_Capacity Depth_of_Regolith Depth_of_Soil","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/extract_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from GeoTIFF image(s) — extract_values","title":"Extract values from GeoTIFF image(s) — extract_values","text":"Extract values one GeoTIFF images based set point locations, supplied (x, y) (longitude, latitude) coordinates. path folder provided, images folder processed.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/extract_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from GeoTIFF image(s) — extract_values","text":"","code":"extract_values(path, xy_coords, method = \"simple\")"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/extract_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from GeoTIFF image(s) — extract_values","text":"path path folder containing one GeoTIFF files e.g. \"~/Documents/rasters\", path pointing one GeoTIFF files e.g. c(\"~/rasters/clay.tif\", \"~/rasters/density.tif\") xy_coords data frame (x, y) (longitude, latitude) coordinates. Note order - incorrect order coordinates may result erroneous NaN results. method one \"simple\", returns exact value cell pixel point falls , \"bilinear\", returns value interpolated values four nearest raster cells.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/extract_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values from GeoTIFF image(s) — extract_values","text":"data frame values","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/harvest.html","id":null,"dir":"Reference","previous_headings":"","what":"A headless version of the Data-Harvester (with some limitations) — harvest","title":"A headless version of the Data-Harvester (with some limitations) — harvest","text":"harvest() function requires YAML configuration file work perform data aggregation, downloading logging based parsed YAML file. information 'headless' functionality, see documentation online (site live yet).","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/harvest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A headless version of the Data-Harvester (with some limitations) — harvest","text":"","code":"harvest(   path_to_config,   log_name = \"download_log\",   plot = FALSE,   contour = FALSE )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/harvest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A headless version of the Data-Harvester (with some limitations) — harvest","text":"path_to_config string: path YAML config file, e.g. \"settings/\" log_name string: name output log file contains information downloaded files plot logical: present matrix plot first band every image downloaded. Defaults FALSE contour logical: add contour lines plot. Defaults FALSE","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/initialise_harvester.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise and validate Data-Harvester, including dependencies — initialise_harvester","title":"Initialise and validate Data-Harvester, including dependencies — initialise_harvester","text":"Initialise validate Data-Harvester, including dependencies","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/initialise_harvester.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise and validate Data-Harvester, including dependencies — initialise_harvester","text":"","code":"initialise_harvester(envname = NULL, earthengine = FALSE, auth_mode = \"gcloud\")"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/initialise_harvester.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise and validate Data-Harvester, including dependencies — initialise_harvester","text":"envname Use Conda environment. Defaults \"r-reticulate\" earthengine Initialise Earth Engine TRUE. Defaults FALSE auth_mode Authentication mode access GEE API. Using \"gcloud\" normally works. remaining three options identical (\"notebook\", \"rstudiocloud\", \"binder\"), just named differently context","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/load_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load settings from YAML file — load_settings","title":"Load settings from YAML file — load_settings","text":"Load settings YAML file","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/load_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load settings from YAML file — load_settings","text":"","code":"load_settings(path_to_yaml)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/load_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load settings from YAML file — load_settings","text":"path_to_yaml Path settings file YAML format/extension.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/load_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load settings from YAML file — load_settings","text":"settings namespace object","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/map_ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise an Earth Engine Image or Image Collection on an interactive map — map_ee","title":"Visualise an Earth Engine Image or Image Collection on an interactive map — map_ee","text":"folium map produced image(s) collected far displayed layer(s) top map.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/map_ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise an Earth Engine Image or Image Collection on an interactive map — map_ee","text":"","code":"map_ee(object, bands = NULL, minmax = NULL, palette = NULL)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/map_ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise an Earth Engine Image or Image Collection on an interactive map — map_ee","text":"object object: data object produced collect_ee() bands string, optional: string list strings representing bands visualised. NULL, present list available bands visualise minmax numeric, optional: list two integers representing minimum maximum values image pixel colours single-band images. set NULL, min max values automatically calculated Defaults NULL palette string, optional: string representing name palette used map colors. Names accessed Matplotlib Colourmaps described https://matplotlib.org/stable/tutorials/colors/colormaps.html. addition, \"ndvi\", \"ndwi\" \"terrain\" palettes available. set None, \"viridis\" used. Defaults NULL","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/map_ee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise an Earth Engine Image or Image Collection on an interactive map — map_ee","text":"updated collect_ee() object can passed aggregate_ee() download_ee()","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/map_ee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise an Earth Engine Image or Image Collection on an interactive map — map_ee","text":"","code":"NULL #> NULL"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/plot.getdata_ee.download.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Earth Engine object — plot.getdata_ee.download","title":"Plot Earth Engine object — plot.getdata_ee.download","text":"Plot Earth Engine object","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/plot.getdata_ee.download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Earth Engine object — plot.getdata_ee.download","text":"","code":"# S3 method for getdata_ee.download plot(x, band = NULL, ...)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/plot.rasterPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GeoTIFF object — plot.rasterPath","title":"Plot GeoTIFF object — plot.rasterPath","text":"Plot GeoTIFF object","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/plot.rasterPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GeoTIFF object — plot.rasterPath","text":"","code":"# S3 method for rasterPath plot(x, choose = NULL, band = NULL, ...)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/preprocess_ee.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess an Earth Engine Image or Image Collection — preprocess_ee","title":"Preprocess an Earth Engine Image or Image Collection — preprocess_ee","text":"Obtain image stacks Google Earth Engine catalog collection processing. Full support Sentinel-2, Sentinel-3, Landsat 5-9 MODIS satellites. Preprocessing performs server-side filtering, cloud masking, scaling offsetting, calculation spectral indices compositing single image representing, example, median, min, max, mean, quantile standard deviation images. unsupported collections, certain functions like scaling, offsetting, spectral indices cloud/shadow masking may available. Must used object created function, collect_ee()","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/preprocess_ee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess an Earth Engine Image or Image Collection — preprocess_ee","text":"","code":"preprocess_ee(   object,   mask_clouds = TRUE,   reduce = \"median\",   spectral = NULL,   clip = TRUE )"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/preprocess_ee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess an Earth Engine Image or Image Collection — preprocess_ee","text":"object object: data object produced collect_ee() mask_clouds logical, optional: perform cloud shadow masking image(s). Defaults TRUE reduce string, optional: summary technique used reduce image collection single composite. Defaults \"median\" spectral logical, optional: automatically calculate spectral index based Awesome Spectral Indices. required bands available, calculation skipped. Defaults NULL clip logical, optional: clip image (removing surrounding data). mostly affects visualisation - final download always respect bounding box set coords, regardless value. Defaults TRUE","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/preprocess_ee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess an Earth Engine Image or Image Collection — preprocess_ee","text":"updated collect_ee() object can passed map_ee(), aggregate_ee() download_ee()","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/preprocess_ee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess an Earth Engine Image or Image Collection — preprocess_ee","text":"","code":"if (FALSE) { img <- collect_ee(   collection = \"LANDSAT/LC09/C02/T1_L2\",   coords = c(149.769345, -30.335861, 149.949173, -30.206271),   date = \"2021-06-01\",   end_date = \"2022-06-01\" )  preprocess_ee(img, spectral = \"NDVI\") }"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/validate_conda.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if conda is available — validate_conda","title":"Check if conda is available — validate_conda","text":"Check conda available","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/validate_conda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if conda is available — validate_conda","text":"","code":"validate_conda(reinstall = FALSE)"},{"path":"https://sydney-informatics-hub.github.io/dataharvester/reference/validate_conda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if conda is available — validate_conda","text":"reinstall Force re-install miniconda. Defaults FALSE","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-012","dir":"Changelog","previous_headings":"","what":"dataharvester 0.1.2","title":"dataharvester 0.1.2","text":"update prepares dataharvester package continuous integration code coverage","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-1-2","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.1.2","text":"removed deprecated unused get_*() functions. functions unused superseded download_*() functions removed logtable-related functions accessed directly Python code. reason use R code removed unused config functions (config_*() *_config()). re-coded near future, removal NOW prevents need deprecate functions (since currently unused) lots fixes documentation, imports, suggests formatting meet R CMD check requirements (100%) example code run, prevent errors R CMD check via GitHub Actions","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-1-2","dir":"Changelog","previous_headings":"","what":"What’s new","title":"dataharvester 0.1.2","text":"integration codecov added new GitHub Actions scripts automate R CMD check code coverage new badges README R CMD check code coverage","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-011","dir":"Changelog","previous_headings":"","what":"dataharvester 0.1.1","title":"dataharvester 0.1.1","text":"Minor bug fixes enhancements (mostly dev side continuous integration). bigger update come soon!","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-010","dir":"Changelog","previous_headings":"","what":"dataharvester 0.1.0","title":"dataharvester 0.1.0","text":"Pre-release version - dataharvester now stable enough pre-release (hopefully). Also fixes bugs.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-1-0","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.1.0","text":"fixed error preprocessing Earth Engine data spectral None - happen since spectral index calculation feature optionals fixed missing symbol print statement harvest()","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0016","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.16","title":"dataharvester 0.0.16","text":"Quick bugfix updates.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-16","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.16","text":"fixed error plotting using harvest() path points file instead folder","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0015","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.15","title":"dataharvester 0.0.15","text":"release fixed bugs added several vignettes various download functions.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-15","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.15","text":"fixed relative path strings recognised Python modules harvest() added demo .gif README readers can preview functionality","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-15","dir":"Changelog","previous_headings":"","what":"What’s new","title":"dataharvester 0.0.15","text":"created 5 new vignettes document layers available downloading various data sources","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0014","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.14","title":"dataharvester 0.0.14","text":"release focuses data extraction rasters plot functions “simply work”. also started implement unit testing package code contains R code.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-14","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.14","text":"improved message outputs using download functions. important overlap Python R message print outputs. update makes feedback (user) less verbose consistent prepares package better logging feature (finalise future update) folder path can now retrieved directly object produced download_ee(), useful plotting data manipulation functions rely extracting data downloaded GeoTIFF file","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-14","dir":"Changelog","previous_headings":"","what":"What’s new","title":"dataharvester 0.0.14","text":"plot() download_*() objects, thanks terra package extract_values() extract values GeoTIFF files started implement unit testing functions testthat","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0013","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.13","title":"dataharvester 0.0.13","text":"Another quick bugfix release.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-13","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.13","text":"authenticating GEE RStudio Cloud now reliable running initialise_harvester() added argument auth_mode manually set authentication method","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0012","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.12","title":"dataharvester 0.0.12","text":"quick bugfix release.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-12","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.12","text":"fixed error harvest() can occur infile attribute exists contains path, leading function incorrectly think sampling data exists","code":""},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-11","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.11","text":"implemented slightly better console feedback downloading data (Python side) plot_rasters(): fixed plotting issue one raster folder","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-11","dir":"Changelog","previous_headings":"","what":"What’s new","title":"dataharvester 0.0.11","text":"S3 plot() methods now available download_*() functions","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0010","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.10","title":"dataharvester 0.0.10","text":"version updates package Python modules. major changes R code.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-10","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.10","text":"Messages imported Python bit organised (improve later version, cosmetic changes) download_dem(): arguments ordered like similar functions, adjusted Better support YAML config files (especially attributes missing)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-009","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.9","title":"dataharvester 0.0.9","text":"fix achieve reliable Python module imports (hopefully).","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-9","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.9","text":"functions import Python modules point directly .py files, instead python folder. Hopefully fixes internal testing error \"module found\"","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-9","dir":"Changelog","previous_headings":"","what":"What’s new","title":"dataharvester 0.0.9","text":"raster_query() samples one rasters based existing sampling data generate sampling file point-specifig geospatial information images","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-008","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.8","title":"dataharvester 0.0.8","text":"Big focus making sure dependencies work, well making sure YAML config file processing workflow reproducible.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-8","dir":"Changelog","previous_headings":"","what":"What’s changed","title":"dataharvester 0.0.8","text":"improved ’harvest()` abilities change output download log name plot rasters folder initialise_harvester() can now create environments, just stick r-reticulate fixed errors installing google cloud sdk Windows machines","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-8","dir":"Changelog","previous_headings":"","what":"What’s new","title":"dataharvester 0.0.8","text":"plot_rasters() function scan folder recursively plot first band GeoTIFF images create_yaml() function generate template skeleton YAML files. function incomplete, finalised next version fixed encoding missing link errors documentation (#7) fixed conda openSSL error (#8)","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-007","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.7","title":"dataharvester 0.0.7","text":"Another quick update fix issues Google Earth Engine authentication.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-006","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.6","title":"dataharvester 0.0.6","text":"quick update authentication methods Google Earth Engine (fingers crossed).","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-6","dir":"Changelog","previous_headings":"","what":"What’s changed:","title":"dataharvester 0.0.6","text":"🛠: Changed intialise_harvester() works Google Earth Engine compatible RStudio Cloud/Binder.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-005","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.5","title":"dataharvester 0.0.5","text":"version focuses download options improved validation Python dependencies Google Earth Engine.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-5","dir":"Changelog","previous_headings":"","what":"What’s new:","title":"dataharvester 0.0.5","text":"⚡: download_dea() Digital Earth Australia downloads ⚡: download_landscape() SLGA Landscape products ⚡: download_radiometric() Geoscience Australia Radiometric maps ⚡: download_silo() now accepts 1 layer downloads","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-5","dir":"Changelog","previous_headings":"","what":"What’s changed:","title":"dataharvester 0.0.5","text":"🛠: Config/reticulate longer used validate Python dependencies, since different package versions needed installed depending workspace environment (.e. RStudio Desktop, RStudio Cloud, Binder). 🏎: performance usability improvements initialise_harvester()","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-004","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.4","title":"dataharvester 0.0.4","text":"mainly bugfix 🪲 (testing) release new features.","code":""},{"path":[]},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-3","dir":"Changelog","previous_headings":"","what":"What’s new:","title":"dataharvester 0.0.3","text":"⚡: add_silo() climate SILO downloads, working 100% 😢 📰: added examples README","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-002","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.2","title":"dataharvester 0.0.2","text":"General bug fixes, added new functions someday replace get_*() functions.","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-new-0-0-2","dir":"Changelog","previous_headings":"","what":"What’s new:","title":"dataharvester 0.0.2","text":"⚡: init_logtable() update_logtable() store download info ⚡: download_slga() download SLGA ⚡: download_dem() download DEM ⚡: match_single() match_multi() validate args ⚡: load_setttings() read YAML file 🛠: added CI automate pkgdown deployment","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"whats-changed-0-0-2","dir":"Changelog","previous_headings":"","what":"What’s changed:","title":"dataharvester 0.0.2","text":"🪲: ee_map() presenting map RStudio viewer - fixed switching geemap.foliummap 🔁: renamed ee_*() functions *_ee() consistency 🏎: performance upgrades initialise_harvester() ⬆️️: updated Python dependencies including imports .py files","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-001","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.1","title":"dataharvester 0.0.1","text":"update describe package features one chance report bugs. initialise_harvester() checks Python depends authentitcates Earth Engine ee_collect() generates object Earth Engine processing downlaods ee_preprocess() perform masking, filtering, spectral index calculations scaling ee_aggregate() basic temporal aggregation images ee_map() visualise Earth Engine images interactive map harvest() perform “headless” data harvesting paired config YAML get_slga() SLGA downloads get_dea() DEA downloads initial documentation added functions, draft-y README.md added Initial pkgdown support added, tested yet since repo public","code":""},{"path":"https://sydney-informatics-hub.github.io/dataharvester/news/index.html","id":"dataharvester-0009000","dir":"Changelog","previous_headings":"","what":"dataharvester 0.0.0.9000","title":"dataharvester 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
